{"version":3,"sources":["assets/components/Tabs.tsx","assets/components/TreeView.tsx","assets/components/Window.tsx","App.tsx","reportWebVitals.ts","state/AppState.ts","index.tsx"],"names":["Tabs","props","useSetState","activeTab","tabs","title","state","setState","role","map","tab","onClick","aria-controls","find","tabContent","TreeView","className","mapTreeItem","items","item","Array","isArray","li","summary","child","treeItems","Window","aria-label","id","type","name","htmlFor","style","justifyContent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppContainer","createContainer","appState","setAppState","toggleDrawer","toggle","drawer","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.65ed776e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useSetState } from \"react-use\";\n\ninterface ITabProps {\n  tabs: Array<{\n    tabContent: React.ReactNode;\n    title: string;\n  }>;\n}\n\nconst Tabs: React.FC<ITabProps> = (props) => {\n  const [state, setState] = useSetState<{ activeTab: string }>({\n    activeTab: props.tabs[0]?.title,\n  });\n  return (\n    <>\n      <menu role=\"tablist\">\n        {props.tabs.map((tab) => (\n          <button\n            onClick={() => setState({ activeTab: tab.title })}\n            aria-controls={tab.title}\n          >\n            {tab.title}\n          </button>\n        ))}\n      </menu>\n      {props.tabs.find((tab) => tab.title === state.activeTab)?.tabContent}\n    </>\n  );\n};\n\nexport default Tabs;\n","import React from \"react\";\nimport { ListItem } from \"../../types/treeItem\";\n\ninterface ITreeViewProps {\n  treeItems: Array<ListItem>;\n}\n\nconst TreeView: React.FC<ITreeViewProps> = (props) => {\n  const mapTreeItem = (items: ListItem[]) =>\n    items.map((item) => {\n      if (Array.isArray(item.li)) {\n        return <li>{mapTreeItem(item.li)}</li>;\n      } else if (typeof item.li === \"string\") {\n        return <li>{item.li as string}</li>;\n      } else {\n        return (\n          <details>\n            <summary>{item.li.summary}</summary>\n            <ul>{mapTreeItem(item.li.child)}</ul>\n          </details>\n        );\n      }\n    });\n\n  return (\n    <>\n      <ul className=\"tree-view\">{mapTreeItem(props.treeItems)}</ul>\n    </>\n  );\n};\n\nexport { TreeView };\n","import React from \"react\";\nimport Tabs from \"./Tabs\";\nimport { TreeView } from \"./TreeView\";\n\ninterface IWindowProps {}\n\nconst Window: React.FC<IWindowProps> = (props) => {\n  return (\n    <div className=\"outer\">\n      <div className=\"middle\">\n        <div className=\"inner\">\n          <div className=\"window\">\n            <div className=\"title-bar\">\n              <div className=\"title-bar-text\">Will Jenner</div>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Minimize\"></button>\n                <button aria-label=\"Maximize\"></button>\n                <button aria-label=\"Close\"></button>\n              </div>\n            </div>\n            <div className=\"window-body\">\n              <Tabs\n                tabs={[\n                  {\n                    tabContent: (\n                      <article role=\"tabpanel\" id=\"yes\">\n                        <p>Set your listening preferences</p>\n                        <fieldset>\n                          <legend>Today's mood</legend>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio29\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio29\">Nicki Minaj</label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio30\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio30\">Bell Towers</label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio31\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio31\">\n                              The Glamorous Monique\n                            </label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio32\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio32\">EN. V</label>\n                          </div>\n                        </fieldset>\n                        <section className=\"field-row\">\n                          <button>Reset Alarm...</button>\n                          <label>Try this to get some attention</label>\n                        </section>\n                      </article>\n                    ),\n                    title: \"yes\",\n                  },\n                  {\n                    tabContent: (\n                      <article role=\"tabpanel\" id=\"no\">\n                        <p>Set your listening preferences</p>\n                        <fieldset>\n                          <legend>Today's mood</legend>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio29\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio29\">Nicki Minaj</label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio30\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio30\">Bell Towers</label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio31\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio31\">\n                              The Glamorous Monique\n                            </label>\n                          </div>\n                          <div className=\"field-row\">\n                            <input\n                              id=\"radio32\"\n                              type=\"radio\"\n                              name=\"fieldset-example2\"\n                            />\n                            <label htmlFor=\"radio32\">EN. V</label>\n                          </div>\n                        </fieldset>\n                        <section className=\"field-row\">\n                          <button>Reeeeeeeeeeeeeeeeeeeeeeeeeeeset...</button>\n                          <label>Try this to get some attention</label>\n                        </section>\n                        <TreeView\n                          treeItems={[\n                            {\n                              li: {\n                                summary: \"Hi\",\n                                child: [\n                                  {\n                                    li: {\n                                      summary: \"hi\",\n                                      child: [{ li: \"hey\" }],\n                                    },\n                                  },\n                                  {\n                                    li: {\n                                      summary: \"boo\",\n                                      child: [{ li: \"ahhh\" }, { li: \"bruh\" }],\n                                    },\n                                  },\n                                  {\n                                    li: \"hey\",\n                                  },\n                                  {\n                                    li: \"hey\",\n                                  },\n                                  {\n                                    li: \"hey\",\n                                  },\n                                  {\n                                    li: \"hey\",\n                                  },\n                                ],\n                              },\n                            },\n                            {\n                              li: \"hello world\",\n                            },\n                          ]}\n                        />\n                      </article>\n                    ),\n                    title: \"no\",\n                  },\n                ]}\n              />\n              <section\n                className=\"field-row\"\n                style={{ justifyContent: \"flex-end\" }}\n              >\n                <button>OK</button>\n                <button>Cancel</button>\n              </section>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Window;\n","import React from \"react\";\nimport \"xp.css/dist/XP.css\";\nimport Window from \"./assets/components/Window\";\nimport \"./assets/styles/index.scss\";\n\nconst App = () => {\n  return <Window />;\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import useSetState from \"react-use/lib/useSetState\";\r\nimport { createContainer } from \"unstated-next\";\r\n\r\ninterface AppState {\r\n  drawer: boolean;\r\n}\r\n\r\nconst useAppState = () => {\r\n  const [appState, setAppState] = useSetState<AppState>();\r\n\r\n  const toggleDrawer = (toggle: boolean) => setAppState({ drawer: toggle });\r\n\r\n  return {\r\n    appState,\r\n    toggleDrawer,\r\n  };\r\n};\r\n\r\nexport const AppContainer = createContainer(useAppState);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppContainer } from \"./state/AppState\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer.Provider>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </AppContainer.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}