{"version":3,"sources":["types/Route.ts","routes/LandingRoute.tsx","routes/SampleWorkAndSkillsRoute.tsx","state/AppState.ts","styles/Styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Route","shouldBeLowercase","getIcon","route","Home","HomeIcon","SampleWorkAndSkills","WorkIcon","routeLabels","Object","keys","map","index","routeName","split","indexOf","toLowerCase","join","trim","routeVal","values","key","value","Icon","LandingRoute","SampleWorkAndSkillsRoute","AppContainer","createContainer","useSetState","appState","setAppState","toggleDrawer","toggle","drawer","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","classes","useTheme","useContainer","className","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","open","paper","direction","Divider","List","to","style","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","path","Routes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Provider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.cad861af.chunk.js","sourcesContent":["import { SvgIconTypeMap } from \"@material-ui/core\";\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WorkIcon from \"@material-ui/icons/Work\";\n\nexport enum Route {\n  Home = \"home\",\n  SampleWorkAndSkills = \"work-and-skills\",\n}\n\nconst shouldBeLowercase = [\"and\"];\n\nconst getIcon = (route: Route) => {\n  switch (route) {\n    case Route.Home:\n      return HomeIcon;\n    case Route.SampleWorkAndSkills:\n      return WorkIcon;\n    default:\n      return HomeIcon;\n  }\n};\n\ninterface IRouteMap {\n  key: string;\n  value: Route;\n  Icon: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\n}\n\nexport const routeLabels: IRouteMap[] = Object.keys(Route).map(\n  (route, index) => {\n    var routeName = route\n      .split(/(?=[A-Z])/)\n      .map((route) =>\n        shouldBeLowercase.indexOf(route.toLowerCase()) >= 0\n          ? route.toLowerCase()\n          : route\n      )\n      .join(\" \")\n      .trim();\n    var routeVal = Object.values(Route)[index] as Route;\n    return { key: routeName, value: routeVal, Icon: getIcon(routeVal) };\n  }\n);\n","export const LandingRoute = () => {\n  return <></>;\n};\n","export const SampleWorkAndSkillsRoute = () => {\n  return <></>;\n};\n","import useSetState from \"react-use/lib/useSetState\";\nimport { createContainer } from \"unstated-next\";\n\ninterface AppState {\n  drawer: boolean;\n}\n\nconst useAppState = () => {\n  const [appState, setAppState] = useSetState<AppState>();\n\n  const toggleDrawer = (toggle: boolean) => setAppState({ drawer: toggle });\n\n  return {\n    appState,\n    toggleDrawer,\n  };\n};\n\nexport const AppContainer = createContainer(useAppState);\n","import { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Route as Routes, routeLabels } from \"./types/Route\";\nimport { LandingRoute } from \"./routes/LandingRoute\";\nimport { SampleWorkAndSkillsRoute } from \"./routes/SampleWorkAndSkillsRoute\";\nimport { AppContainer } from \"./state/AppState\";\nimport { useStyles } from \"./styles/Styles\";\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { appState, toggleDrawer } = AppContainer.useContainer();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: appState.drawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => toggleDrawer(true)}\n            edge=\"start\"\n            className={clsx(\n              classes.menuButton,\n              appState.drawer && classes.hide\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h5\" noWrap>\n            Harry Gillingham\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={appState.drawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={() => toggleDrawer(false)}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {routeLabels.map((route) => (\n            <Link\n              to={route.value}\n              style={{ textDecoration: \"none\", color: \"black\" }}\n              key={route.key}\n            >\n              <ListItem button>\n                <ListItemIcon>\n                  <route.Icon />\n                </ListItemIcon>\n                <ListItemText primary={route.key} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: appState.drawer,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Switch>\n          <Route path={Routes.Home}>\n            <LandingRoute />\n          </Route>\n          <Route path={Routes.SampleWorkAndSkills}>\n            <SampleWorkAndSkillsRoute />\n          </Route>\n          <Route>\n            <Redirect to={Routes.Home} />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { AppContainer } from \"./state/AppState\";\nimport { HashRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer.Provider>\n      <HashRouter>\n        <CssBaseline />\n        <App />\n      </HashRouter>\n    </AppContainer.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}